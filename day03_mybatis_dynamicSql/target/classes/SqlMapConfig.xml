<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- mybatis的主配置文件 -->
<configuration>
    <!-- 配置环境 -->
    <!--配置外部的properties-->
    <!--resources属性:用于自定配置文件的位置，是按照类的路径写法来写的，并且必须存在于类路径下-->
    <!--url属性:是按照url的写法来写地址的,用来唯一标示一个资源的位置
        http://localhost:8080/mvc/demo
        协议      主机      端口  URI
    -->
    <properties resource="jdbcConfig.properties"/>

    <!--使用typeAliases配置别名，他只能配置domain类中的别名-->
    <typeAliases>
        <!--typeAliases用于配置别名,type属性指定的是实体类全限定类名,alias属性指定别名-->
        <!--类似于c语言里的typedef-->
<!--        <typeAlias type="com.itheima.domain.User" alias="user"></typeAlias>-->
        
        <!--package标签用于指定配置别名的包，当指定之后，该包下的实体类都会注册别名，并且类名就是别名，不再区分大小写-->
        <package name="com.itheima.domain"/>
    </typeAliases>
    <environments default="mysql">
        <!-- 配置mysql的环境-->
        <environment id="mysql">
            <!-- 配置事务的类型-->
            <transactionManager type="JDBC"></transactionManager>
            <!-- 配置数据源（连接池） -->
            <dataSource type="UNPOOLED">
                <!-- 配置连接数据库的4个基本信息 -->
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!-- 指定映射配置文件的位置，映射配置文件指的是每个dao独立的配置文件 -->


    <mappers>
<!--        <mapper resource="com/itheima/dao/IUserDao.xml"></mapper>-->

        <!--这里面的package标签用于指定Dao接口指定的包，当指定完之后，就不需要写mapper以及resource以及class了-->
        <package name="com.itheima.dao"/>
    </mappers>
</configuration>